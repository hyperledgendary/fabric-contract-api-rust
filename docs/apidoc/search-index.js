var searchIndex={};
searchIndex["basic_contract_rs"] = {"doc":"Main library module ","i":[[5,"__launch","basic_contract_rs","",null,[[]]],[5,"once_wapc","","",null,[[["str"]],["callresult"]]],[5,"__guest_call","","",null,[[["i32"]],["i32"]]]],"p":[]};
searchIndex["contract_macros"] = {"doc":"Definitions of the macros used for the Contracts","i":[[23,"contract_impl","contract_macros","Use this macro to mark the implementation of the your…",null,null],[23,"transaction","","Use this to mark the functions that are considered to be…",null,null],[23,"property","","Define the properties of the datatype",null,null],[24,"DataTypeMacro","","Use this to mark the structs that serve as complex data…",null,null]],"p":[]};
searchIndex["fabric_contract"] = {"doc":"This is the main crate for providing support for writing…","i":[[23,"contract_impl","fabric_contract","Use this macro to mark the implementation of the your…",null,null],[23,"transaction","","Use this to mark the functions that are considered to be…",null,null],[23,"property","","Define the properties of the datatype",null,null],[24,"DataTypeMacro","","Use this to mark the structs that serve as complex data…",null,null],[0,"prelude","","",null,null],[6,"CallResult","fabric_contract::prelude","",null,null],[6,"Result","","WaPC Guest SDK result type",null,null],[5,"host_call","","The function through which all host calls take place. ",null,[[["str"]],[["vec",["u8"]],["error"],["result",["vec","error"]]]]],[14,"wapc_handler","","",null,null],[5,"handle_wapc","","General function to log messages",null,[[["str"]],["callresult"]]],[5,"host_log","","",null,[[["str"]]]],[0,"data","fabric_contract","",null,null],[23,"Property","fabric_contract::data","Define the properties of the datatype",null,null],[8,"DataType","","",null,null],[10,"to_state","","Converts into a state that can be handled and put into the…",0,[[["self"]],["state"]]],[10,"get_key","","",0,[[["self"]],["string"]]],[0,"runtime","fabric_contract","Module to provide 'runtime' services.",null,null],[0,"contract","","Module to provide APIs to write contracts and interact…",null,null],[23,"Contract_Impl","fabric_contract::contract","Use this macro to mark the implementation of the your…",null,null],[23,"Transaction","","Use this to mark the functions that are considered to be…",null,null],[3,"Context","","",null,null],[3,"ContractManager","","Contract Manager structure that holds the list contract…",null,null],[3,"Collection","","",null,null],[3,"Ledger","","Ledger representing high level concept of the Fabric…",null,null],[3,"State","","A State is the combination of key and value that are…",null,null],[3,"ContractError","","",null,null],[4,"CollectionName","","Collection Name",null,null],[13,"World","","",1,null],[13,"Private","","",1,null],[13,"Organization","","",1,null],[8,"Contract","","Trait that is implemented for each contract Default…",null,null],[10,"name","","",2,[[["self"]],["string"]]],[8,"Routing","","",null,null],[10,"route2","","",3,[[["context"],["vec",["string"]],["self"],["string"]],[["result",["string","string"]],["string"]]]],[0,"blockchain","fabric_contract","Module to provide APIs to get information about Fabric",null,null],[3,"Transaction","fabric_contract::blockchain","Represents a transaction ",null,null],[14,"register","fabric_contract","Macro to use in the lib.rs file of your contract's crate",null,null],[11,"from","fabric_contract::blockchain","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","fabric_contract::contract","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[["datatype"],["box",["datatype"]]],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[["state"]],["self"]]],[11,"default","","",10,[[],["self"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"source","","",7,[[["self"]],[["error"],["option",["error"]]]]],[11,"get_id","fabric_contract::blockchain","Gets the transaction id",4,[[["self"]],["string"]]],[11,"get_timestamp","","Gets the timestamp of this transaction",4,[[["self"]],["string"]]],[11,"get_mspid","","The MSP Identifier of the originating organization",4,[[["self"]],["string"]]],[11,"current_transaction","","Get the current transaction",4,[[],["transaction"]]],[11,"new","fabric_contract::contract","",5,[[],["contractmanager"]]],[11,"register_contract","","register the contract",5,[[["box",["contract"]],["contract"]]]],[11,"route","","Route the call to the correct contract",5,[[["string"],["u8"],["vec",["u8"]],["context"]],[["result",["string","string"]],["string"]]]],[11,"new","","",6,[[["string"]],["context"]]],[11,"get_txid","","",6,[[["self"]],["string"]]],[11,"log","","",6,[[["self"],["string"]]]],[11,"access_ledger","","Get the Ledger based on the current transactional context",8,[[],["ledger"]]],[11,"get_collection","","Return the collection based on the name",8,[[["collectionname"],["self"]],["collection"]]],[11,"retrieve","","",9,[[["string"],["self"]],[["result",["string"]],["datatype"],["string"]]]],[11,"create","","",9,[[["datatype"],["self"]],[["state"],["string"],["result",["state","string"]]]]],[11,"update","","",9,[[["datatype"],["self"]],[["state"],["string"],["result",["state","string"]]]]],[11,"delete","","",9,[[["datatype"],["self"]],[["string"],["result",["string"]]]]],[11,"state_exists","","Does this key exist",9,[[["string"],["self"]],["bool"]]],[11,"get_state","","Return the state for this key",9,[[["self"],["string"]],[["state"],["string"],["result",["state","string"]]]]],[11,"create_state","","Creates the state",9,[[["string"],["u8"],["vec",["u8"]],["self"]],[["state"],["string"],["result",["state","string"]]]]],[11,"update_state","","Update the states",9,[[["string"],["u8"],["vec",["u8"]],["self"]],["state"]]],[11,"delete_state","","Deletes the key ",9,[[["self"],["string"]],["state"]]],[11,"get_states","","Performs a key range query",9,[[["keyqueryhandler"]],["string"]]],[11,"query_states","","",9,[[["richqueryhandler"]],["string"]]],[11,"make_composite_key","","Make a composite key.",10,[[["vec",["string"]],["string"]],["string"]]],[11,"split_composite_key","","Splits a composite key",10,[[["string"]],[["vec",["string"]],["string"]]]],[11,"new","","Creates a new state",10,[[["u8"],["vec",["u8"]],["string"]],["state"]]],[11,"value","","Get the buffer that  this state ",10,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"key","","Get the key that used for this state",10,[[["self"]],["string"]]],[11,"get_history","","Returns an iterator of the state history for this state",10,[[]]],[11,"get_hash","","gets the private hash for this stae",10,[[],[["vec",["u8"]],["u8"]]]],[11,"set_endorsement","","Sets the State Based Endorsment for this state",10,[[]]],[11,"get_endorsement","","",10,[[]]]],"p":[[8,"DataType"],[4,"CollectionName"],[8,"Contract"],[8,"Routing"],[3,"Transaction"],[3,"ContractManager"],[3,"Context"],[3,"ContractError"],[3,"Ledger"],[3,"Collection"],[3,"State"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);