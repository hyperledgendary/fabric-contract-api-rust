var searchIndex = JSON.parse('{\
"basic_contract_rs":{"doc":"A basic Smart Contract","i":[[3,"AssetContract","basic_contract_rs","Structure for the AssetContract, on which implemenation…",null,null],[3,"MyAsset","","Basic definition of the asset object",null,null],[5,"__launch","","",null,[[]]],[5,"once_wapc","","",null,[[],["callresult",6]]],[5,"__guest_call","","",null,[[]]],[11,"new","","Some form of \'new\' function is required. See the lib.rs of…",0,[[],["assetcontract",3]]],[11,"asset_exists","","Does the Asset with the supplied key exist?",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"invoke_asset_exists","","",0,[[["wirebuffer",3],["vec",3],["typeschema",3]],[["result",4],["wirebuffer",3],["contracterror",3]]]],[11,"md_asset_exists","","",0,[[],["transactionfn",3]]],[11,"create_asset","","Creates a new asset, with supplied id, and value Marked as…",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"invoke_create_asset","","",0,[[["wirebuffer",3],["vec",3],["typeschema",3]],[["result",4],["wirebuffer",3],["contracterror",3]]]],[11,"md_create_asset","","",0,[[],["transactionfn",3]]],[11,"read_asset_value","","Reads the value with the supplied asset id",0,[[["string",3]],[["result",4],["contracterror",3],["string",3]]]],[11,"invoke_read_asset_value","","",0,[[["wirebuffer",3],["vec",3],["typeschema",3]],[["result",4],["wirebuffer",3],["contracterror",3]]]],[11,"md_read_asset_value","","",0,[[],["transactionfn",3]]],[11,"new","","",1,[[["string",3]],["myasset",3]]],[11,"get_value","","",1,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",1,[[["state",3]]]],[11,"default","","",1,[[]]],[11,"route3","","",0,[[["wirebuffer",3],["string",3],["typeschema",3],["vec",3]],[["result",4],["wirebuffer",3],["contracterror",3]]]],[11,"get_fn_metadata","","",0,[[],[["transactionfn",3],["vec",3]]]],[11,"name","","Name of the contract",0,[[],["string",3]]],[11,"to_state","","",1,[[],["state",3]]],[11,"get_key","","",1,[[],["string",3]]],[11,"from_state","","",1,[[["state",3]]]]],"p":[[3,"AssetContract"],[3,"MyAsset"]]},\
"contract_macros":{"doc":"Definitions of the macros used for the Contracts","i":[[23,"contract_impl","contract_macros","Use this macro to mark the implementation of the your…",null,null],[23,"transaction","","Use this to mark the functions that are considered to be…",null,null],[23,"property","","Define the properties of the datatype",null,null],[24,"DataTypeMacro","","Use this to mark the structs that serve as complex data…",null,null]],"p":[]},\
"fabric_contract":{"doc":"This is the main crate for providing support for writing…","i":[[23,"contract_impl","fabric_contract","Use this macro to mark the implementation of the your…",null,null],[23,"transaction","","Use this to mark the functions that are considered to be…",null,null],[23,"property","","Define the properties of the datatype",null,null],[24,"DataTypeMacro","","Use this to mark the structs that serve as complex data…",null,null],[0,"prelude","","",null,null],[6,"CallResult","fabric_contract::prelude","",null,null],[5,"host_call","","The function through which all host calls take place.",null,[[],[["vec",3],["result",4],["error",3]]]],[14,"wapc_handler","","",null,null],[6,"Result","","WaPC Guest SDK result type",null,null],[3,"TransactionFnBuilder","","",null,null],[3,"TransactionFn","","",null,null],[3,"ContractDefn","","Internal definition of a contract",null,null],[5,"handle_wapc","","Map to the ContractService",null,[[],["callresult",6]]],[5,"host_log","","",null,[[]]],[0,"data","fabric_contract","",null,null],[23,"Property","fabric_contract::data","Define the properties of the datatype",null,null],[3,"TypeSchema","","",null,null],[12,"contract_type","","",0,null],[12,"format","","",0,null],[3,"WireBuffer","","",null,null],[12,"buffer","","",1,null],[12,"schema","","",1,null],[8,"DataType","","",null,null],[10,"to_state","","Converts into a state that can be handled and put into the…",2,[[],["state",3]]],[10,"get_key","","",2,[[],["string",3]]],[10,"from_state","","",2,[[["state",3]]]],[8,"WireBufferFromReturnType","","",null,null],[10,"from_rt","","",3,[[]]],[0,"runtime","fabric_contract","Module to provide \'runtime\' services.",null,null],[5,"init_logger","fabric_contract::runtime","Called from the register contract macro.",null,[[]]],[5,"hook","","Hook function to capture the panic and route it to the…",null,[[["panicinfo",3]]]],[0,"contract","fabric_contract","Module to provide APIs to write contracts and interact…",null,null],[23,"Contract_Impl","fabric_contract::contract","Use this macro to mark the implementation of the your…",null,null],[23,"Transaction","","Use this to mark the functions that are considered to be…",null,null],[3,"Context","","",null,null],[3,"ContractManager","","Contract Manager structure that holds the list contract…",null,null],[3,"Collection","","",null,null],[3,"Ledger","","Ledger representing high level concept of the Fabric…",null,null],[3,"State","","A State is the combination of key and value that are…",null,null],[3,"ContractError","","Contract Error is what the contract will return to…",null,null],[3,"LedgerError","","Ledger Error is returned by the API calls made against the…",null,null],[4,"CollectionName","","Collection Name",null,null],[13,"World","","",4,null],[13,"Private","","",4,null],[13,"Organization","","",4,null],[8,"Contract","","Trait that is implemented for each contract Default…",null,null],[10,"name","","",5,[[],["string",3]]],[8,"Routing","","",null,null],[10,"route3","","",6,[[["typeschema",3],["string",3],["vec",3],["wirebuffer",3]],[["contracterror",3],["wirebuffer",3],["result",4]]]],[8,"Metadata","","",null,null],[10,"get_fn_metadata","","Gets the detail of the functions, which is vector of strings",7,[[],[["transactionfn",3],["vec",3]]]],[0,"blockchain","fabric_contract","Module to provide APIs to get information about Fabric",null,null],[3,"Transaction","fabric_contract::blockchain","Represents a transaction ",null,null],[3,"ClientIdentity","","Represents the identity that is requesting this transaction",null,null],[14,"register","fabric_contract","Macro to use in the lib.rs file of your contract\'s crate",null,null],[11,"from","fabric_contract::blockchain","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","fabric_contract::contract","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","fabric_contract::prelude","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","fabric_contract::contract","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","fabric_contract::prelude","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","fabric_contract::contract","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","fabric_contract::data","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from_rt","","",1,[[["string",3]]]],[11,"from_rt","","",1,[[]]],[11,"from_rt","","",1,[[]]],[11,"from","fabric_contract::contract","",15,[[["string",3]]]],[11,"from","","",15,[[["ledgererror",3]]]],[11,"from","","",16,[[["string",3]]]],[11,"from","","",19,[[]]],[11,"from","","",19,[[]]],[11,"from","","",19,[[["state",3]]]],[11,"from","","",19,[[["state",3]]]],[11,"clone","","",12,[[],["context",3]]],[11,"clone","fabric_contract::prelude","",13,[[],["transactionfn",3]]],[11,"clone","","",14,[[],["transactionfnbuilder",3]]],[11,"clone","fabric_contract::data","",0,[[],["typeschema",3]]],[11,"default","fabric_contract::contract","",12,[[],["context",3]]],[11,"default","fabric_contract::prelude","",13,[[],["transactionfn",3]]],[11,"default","","",14,[[],["transactionfnbuilder",3]]],[11,"default","fabric_contract::contract","",19,[[]]],[11,"default","fabric_contract::data","",0,[[]]],[11,"fmt","fabric_contract::prelude","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","fabric_contract::contract","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","fabric_contract::data","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","fabric_contract::prelude","",13,[[["formatter",3]],["result",6]]],[11,"fmt","fabric_contract::contract","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","fabric_contract::data","",0,[[["formatter",3]],["result",6]]],[11,"source","fabric_contract::contract","",15,[[],[["option",4],["error",8]]]],[11,"source","","",16,[[],[["option",4],["error",8]]]],[11,"get_id","fabric_contract::blockchain","Gets the transaction id",8,[[],["string",3]]],[11,"get_timestamp","","Gets the timestamp of this transaction",8,[[],["string",3]]],[11,"get_peer_mspid","","The MSP Identifier of the originating organization",8,[[],["string",3]]],[11,"get_submitting_identity","","Get ",8,[[],[["result",4],["clientidentity",3],["string",3]]]],[11,"current_transaction","","Get the current transaction",8,[[],["transaction",3]]],[11,"get_id","","The String id associated with this identiy",9,[[],["string",3]]],[11,"get_mspid","","The MSP Identifier of this identity",9,[[],["string",3]]],[11,"get_attribute","","Returns the value of the client\'s attribute named…",9,[[["string",3]],[["string",3],["option",4]]]],[11,"new","fabric_contract::contract","",10,[[],["contractmanager",3]]],[11,"register_contract","","register the contract",10,[[["box",3],["contract",8]]]],[11,"route","","Route the call to the correct contract",10,[[["context",3],["string",3]],[["contracterror",3],["wirebuffer",3],["result",4]]]],[11,"new","fabric_contract::prelude","",11,[[["box",3],["contract",8]],["contractdefn",3]]],[11,"add_tx_fn","","",11,[[["contractdefn",3],["transactionfn",3]]]],[11,"add_new_method","","",11,[[["contractdefn",3]]]],[11,"get_txfn","","",11,[[["contractdefn",3]],[["result",4],["string",3],["transactionfn",3]]]],[11,"invoke","","",11,[[["context",3],["contractdefn",3],["string",3]],[["contracterror",3],["wirebuffer",3],["result",4]]]],[11,"new","fabric_contract::contract","",12,[[["transactioncontext",3]],["context",3]]],[11,"get_txid","","",12,[[],["string",3]]],[11,"get_channelid","","",12,[[],["string",3]]],[11,"new","fabric_contract::prelude","",13,[[],["transactionfn",3]]],[11,"get_name","","",13,[[],["string",3]]],[11,"get_return","","",13,[[],["typeschema",3]]],[11,"get_parameters","","",13,[[],[["parameterdefn",3],["vec",3]]]],[11,"new","","",14,[[],["transactionfnbuilder",3]]],[11,"name","","",14,[[]]],[11,"return_type","","",14,[[["typeschema",3]]]],[11,"add_arg","","",14,[[]]],[11,"build","","",14,[[],["transactionfn",3]]],[11,"access_ledger","fabric_contract::contract","Get the Ledger based on the current transactional context",17,[[],["ledger",3]]],[11,"get_collection","","Return the collection based on the name",17,[[["collectionname",4]],["collection",3]]],[11,"new","","",18,[[],["collection",3]]],[11,"create","","",18,[[],[["result",4],["state",3],["ledgererror",3]]]],[11,"retrieve","","",18,[[["string",3]],[["ledgererror",3],["result",4]]]],[11,"state_exists","","Does this key exist",18,[[["string",3]],[["result",4],["ledgererror",3]]]],[11,"retrieve_state","","Return the state for this key",18,[[["string",3]],[["result",4],["state",3],["ledgererror",3]]]],[11,"create_state","","Creates the state",18,[[["vec",3],["string",3]],[["result",4],["state",3],["ledgererror",3]]]],[11,"update_state","","Update the states",18,[[["vec",3],["string",3]],[["result",4],["state",3],["ledgererror",3]]]],[11,"delete_state","","Deletes the key ",18,[[["string",3]],[["result",4],["ledgererror",3]]]],[11,"get_states","","Performs a key range query",18,[[["keyqueryhandler",4]],[["result",4],["ledgererror",3]]]],[11,"query_states","","",18,[[["richqueryhandler",4]],[["result",4],["ledgererror",3]]]],[11,"make_composite_key","","Make a composite key.",19,[[["vec",3],["string",3]],["string",3]]],[11,"split_composite_key","","Splits a composite key",19,[[["string",3]],[["vec",3],["string",3]]]],[11,"new","","Creates a new state",19,[[["vec",3],["string",3]],["state",3]]],[11,"value","","Get the buffer that  this state ",19,[[],["vec",3]]],[11,"key","","Get the key that used for this state",19,[[],["string",3]]],[11,"get_history","","Returns an iterator of the state history for this state",19,[[]]],[11,"get_hash","","gets the private hash for this stae",19,[[],["vec",3]]],[11,"set_endorsment","","Sets the State Based Endorsment for this state",19,[[]]],[11,"get_endorsement","","",19,[[]]],[11,"new","fabric_contract::data","",1,[[["vec",3],["typeschema",3]]]],[11,"new_unfilled","","",1,[[["typeschema",3]]]]],"p":[[3,"TypeSchema"],[3,"WireBuffer"],[8,"DataType"],[8,"WireBufferFromReturnType"],[4,"CollectionName"],[8,"Contract"],[8,"Routing"],[8,"Metadata"],[3,"Transaction"],[3,"ClientIdentity"],[3,"ContractManager"],[3,"ContractDefn"],[3,"Context"],[3,"TransactionFn"],[3,"TransactionFnBuilder"],[3,"ContractError"],[3,"LedgerError"],[3,"Ledger"],[3,"Collection"],[3,"State"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);