var searchIndex = JSON.parse('{\
"asset_transfer_rs":{"doc":"Main library module ","i":[[3,"TransferContract","asset_transfer_rs","Structure for the AssetContract, on which implemenation…",null,null],[3,"MyAsset","","",null,null],[5,"__launch","","",null,[[]]],[5,"once_wapc","","",null,[[],["callresult",6]]],[5,"__guest_call","","",null,[[]]],[11,"new","","",0,[[],["transfercontract",3]]],[11,"issue_asset","","",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"invoke_issue_asset","","",0,[[["string",3],["vec",3]],[["result",4],["contracterror",3]]]],[11,"agree_to_sell","","",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"invoke_agree_to_sell","","",0,[[["string",3],["vec",3]],[["result",4],["contracterror",3]]]],[11,"agree_to_buy","","",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"invoke_agree_to_buy","","",0,[[["string",3],["vec",3]],[["result",4],["contracterror",3]]]],[11,"verify_asset_properties","","",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"invoke_verify_asset_properties","","",0,[[["string",3],["vec",3]],[["result",4],["contracterror",3]]]],[11,"transfer_asset","","",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"invoke_transfer_asset","","",0,[[["string",3],["vec",3]],[["result",4],["contracterror",3]]]],[11,"asset_exists","","Does the Asset with the supplied key exist",0,[[["string",3]],[["contracterror",3],["result",4]]]],[11,"invoke_asset_exists","","",0,[[["string",3],["vec",3]],[["contracterror",3],["result",4]]]],[11,"create_asset","","Creates an asset",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"invoke_create_asset","","",0,[[["string",3],["vec",3]],[["result",4],["contracterror",3]]]],[11,"read_asset_value","","reads an asset and returns the value",0,[[["string",3]],[["string",3],["contracterror",3],["result",4]]]],[11,"invoke_read_asset_value","","",0,[[["string",3],["vec",3]],[["string",3],["contracterror",3],["result",4]]]],[11,"new","","",1,[[["string",3]],["myasset",3]]],[11,"get_value","","",1,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"route2","","",0,[[["string",3],["context",3],["vec",3]],[["string",3],["result",4]]]],[11,"name","","",0,[[],["string",3]]],[11,"to_state","","",1,[[],["state",3]]],[11,"get_key","","",1,[[],["string",3]]]],"p":[[3,"TransferContract"],[3,"MyAsset"]]},\
"basic_contract_rs":{"doc":"Main library module ","i":[[3,"AssetContract","basic_contract_rs","Structure for the AssetContract, on which implemenation…",null,null],[3,"MyAsset","","",null,null],[5,"__launch","","",null,[[]]],[5,"once_wapc","","",null,[[],["callresult",6]]],[5,"__guest_call","","",null,[[]]],[11,"new","","TODO: Is this required? Can it be enforced",0,[[],["assetcontract",3]]],[11,"asset_exists","","Does the Asset with the supplied key exist",0,[[["string",3]],[["contracterror",3],["result",4]]]],[11,"invoke_asset_exists","","",0,[[["string",3],["vec",3]],[["contracterror",3],["result",4]]]],[11,"create_asset","","Creates an asset",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"invoke_create_asset","","",0,[[["string",3],["vec",3]],[["result",4],["contracterror",3]]]],[11,"read_asset_value","","reads an asset and returns the value",0,[[["string",3]],[["string",3],["contracterror",3],["result",4]]]],[11,"invoke_read_asset_value","","",0,[[["string",3],["vec",3]],[["string",3],["contracterror",3],["result",4]]]],[11,"new","","",1,[[["string",3]],["myasset",3]]],[11,"get_value","","",1,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"route2","","",0,[[["string",3],["context",3],["vec",3]],[["string",3],["result",4]]]],[11,"name","","",0,[[],["string",3]]],[11,"to_state","","",1,[[],["state",3]]],[11,"get_key","","",1,[[],["string",3]]]],"p":[[3,"AssetContract"],[3,"MyAsset"]]},\
"contract_macros":{"doc":"Definitions of the macros used for the Contracts","i":[[23,"contract_impl","contract_macros","Use this macro to mark the implementation of the your…",null,null],[23,"transaction","","Use this to mark the functions that are considered to be…",null,null],[23,"property","","Define the properties of the datatype",null,null],[24,"DataTypeMacro","","Use this to mark the structs that serve as complex data…",null,null]],"p":[]},\
"fabric_contract":{"doc":"This is the main crate for providing support for writing…","i":[[23,"contract_impl","fabric_contract","Use this macro to mark the implementation of the your…",null,null],[23,"transaction","","Use this to mark the functions that are considered to be…",null,null],[23,"property","","Define the properties of the datatype",null,null],[24,"DataTypeMacro","","Use this to mark the structs that serve as complex data…",null,null],[0,"prelude","","",null,null],[6,"CallResult","fabric_contract::prelude","",null,null],[5,"host_call","","The function through which all host calls take place.",null,[[],[["vec",3],["error",3],["result",4]]]],[14,"wapc_handler","","",null,null],[6,"Result","","WaPC Guest SDK result type",null,null],[5,"handle_wapc","","General function to log messages",null,[[],["callresult",6]]],[5,"host_log","","",null,[[]]],[0,"data","fabric_contract","",null,null],[23,"Property","fabric_contract::data","Define the properties of the datatype",null,null],[8,"DataType","","",null,null],[10,"to_state","","Converts into a state that can be handled and put into the…",0,[[],["state",3]]],[10,"get_key","","",0,[[],["string",3]]],[0,"runtime","fabric_contract","Module to provide \'runtime\' services.",null,null],[5,"init_logger","fabric_contract::runtime","",null,[[]]],[5,"hook","","",null,[[["panicinfo",3]]]],[0,"contract","fabric_contract","Module to provide APIs to write contracts and interact…",null,null],[23,"Contract_Impl","fabric_contract::contract","Use this macro to mark the implementation of the your…",null,null],[23,"Transaction","","Use this to mark the functions that are considered to be…",null,null],[3,"Context","","",null,null],[3,"ContractManager","","Contract Manager structure that holds the list contract…",null,null],[3,"Collection","","",null,null],[3,"Ledger","","Ledger representing high level concept of the Fabric…",null,null],[3,"State","","A State is the combination of key and value that are…",null,null],[3,"ContractError","","",null,null],[4,"CollectionName","","Collection Name",null,null],[13,"World","","",1,null],[13,"Private","","",1,null],[13,"Organization","","",1,null],[8,"Contract","","Trait that is implemented for each contract Default…",null,null],[10,"name","","",2,[[],["string",3]]],[8,"Routing","","",null,null],[10,"route2","","",3,[[["string",3],["context",3],["vec",3]],[["string",3],["result",4]]]],[0,"blockchain","fabric_contract","Module to provide APIs to get information about Fabric",null,null],[3,"Transaction","fabric_contract::blockchain","Represents a transaction ",null,null],[3,"ClientIdentity","","Represents the identity that is requesting this transaction",null,null],[14,"register","fabric_contract","Macro to use in the lib.rs file of your contract\'s crate",null,null],[11,"from","fabric_contract::blockchain","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","fabric_contract::contract","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",8,[[["string",3]]]],[11,"from","","",11,[[]]],[11,"from","","",11,[[["box",3],["datatype",8]]]],[11,"from","","",11,[[]]],[11,"from","","",11,[[["state",3]]]],[11,"default","","",11,[[]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"source","","",8,[[],[["option",4],["error",8]]]],[11,"get_id","fabric_contract::blockchain","Gets the transaction id",4,[[],["string",3]]],[11,"get_timestamp","","Gets the timestamp of this transaction",4,[[],["string",3]]],[11,"get_peer_mspid","","The MSP Identifier of the originating organization",4,[[],["string",3]]],[11,"get_submitting_identity","","Get ",4,[[],[["string",3],["result",4],["clientidentity",3]]]],[11,"current_transaction","","Get the current transaction",4,[[],["transaction",3]]],[11,"get_id","","The String id associated with this identiy",5,[[],["string",3]]],[11,"get_mspid","","The MSP Identifier of this identity",5,[[],["string",3]]],[11,"get_attribute","","Returns the value of the client\'s attribute named…",5,[[["string",3]],[["string",3],["option",4]]]],[11,"new","fabric_contract::contract","",6,[[],["contractmanager",3]]],[11,"register_contract","","register the contract",6,[[["contract",8],["box",3]]]],[11,"route","","Route the call to the correct contract",6,[[["string",3],["context",3],["vec",3]],[["string",3],["result",4]]]],[11,"new","","",7,[[["string",3]],["context",3]]],[11,"get_txid","","",7,[[],["string",3]]],[11,"log","","",7,[[["string",3]]]],[11,"access_ledger","","Get the Ledger based on the current transactional context",9,[[],["ledger",3]]],[11,"get_collection","","Return the collection based on the name",9,[[["collectionname",4]],["collection",3]]],[11,"new","","",10,[[],["collection",3]]],[11,"retrieve","","",10,[[["string",3]],[["string",3],["datatype",8],["result",4]]]],[11,"create","","",10,[[["datatype",8]],[["string",3],["state",3],["result",4]]]],[11,"update","","",10,[[["datatype",8]],[["string",3],["state",3],["result",4]]]],[11,"delete","","",10,[[["datatype",8]],[["string",3],["result",4]]]],[11,"state_exists","","Does this key exist",10,[[["string",3]]]],[11,"get_state","","Return the state for this key",10,[[["string",3]],[["string",3],["state",3],["result",4]]]],[11,"create_state","","Creates the state",10,[[["string",3],["vec",3]],[["string",3],["state",3],["result",4]]]],[11,"update_state","","Update the states",10,[[["string",3],["vec",3]],["state",3]]],[11,"delete_state","","Deletes the key ",10,[[["string",3]],["state",3]]],[11,"get_states","","Performs a key range query",10,[[["keyqueryhandler",4]],["string",3]]],[11,"query_states","","",10,[[["richqueryhandler",4]],["string",3]]],[11,"make_composite_key","","Make a composite key.",11,[[["string",3],["vec",3]],["string",3]]],[11,"split_composite_key","","Splits a composite key",11,[[["string",3]],[["string",3],["vec",3]]]],[11,"new","","Creates a new state",11,[[["string",3],["vec",3]],["state",3]]],[11,"value","","Get the buffer that  this state ",11,[[],["vec",3]]],[11,"key","","Get the key that used for this state",11,[[],["string",3]]],[11,"get_history","","Returns an iterator of the state history for this state",11,[[]]],[11,"get_hash","","gets the private hash for this stae",11,[[],["vec",3]]],[11,"set_endorsement","","Sets the State Based Endorsment for this state",11,[[]]],[11,"get_endorsement","","",11,[[]]]],"p":[[8,"DataType"],[4,"CollectionName"],[8,"Contract"],[8,"Routing"],[3,"Transaction"],[3,"ClientIdentity"],[3,"ContractManager"],[3,"Context"],[3,"ContractError"],[3,"Ledger"],[3,"Collection"],[3,"State"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);