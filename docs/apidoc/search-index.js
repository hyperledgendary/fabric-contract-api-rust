var searchIndex = JSON.parse('{\
"asset_transfer_rs":{"doc":"Main library module ","i":[[3,"AssetTransfer","asset_transfer_rs","Structure for the AssetContract, on which implemenation…",null,null],[3,"AssetTransferQuery","","Structure for the AssetContract, on which implemenation…",null,null],[3,"Asset","","",null,null],[5,"__launch","","",null,[[]]],[5,"once_wapc","","",null,[[],["callresult",6]]],[5,"__guest_call","","",null,[[]]],[11,"new","","",0,[[],["assettransfer",3]]],[11,"init_ledger","","",0,[[],[["result",4],["contracterror",3]]]],[11,"create_asset","","CreateAsset issues a new asset to the world state with…",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"read_asset","","",0,[[["string",3]],[["contracterror",3],["asset",3],["result",4]]]],[11,"update_asset","","",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"delete_asset","","",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"asset_exists","","",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"transfer_asset","","",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"new","","",1,[[],["assettransferquery",3]]],[11,"create_asset","","CreateAsset issues a new asset to the world state with…",1,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"read_asset","","",1,[[["string",3]],[["contracterror",3],["asset",3],["result",4]]]],[11,"update_asset","","",1,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"delete_asset","","",1,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"asset_exists","","",1,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"transfer_asset","","",1,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"transfer_asset_by_color","","",1,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"new","","",2,[[["string",3]],["asset",3]]],[11,"update_owner","","",2,[[["string",3]]]],[11,"get_color","","",2,[[],["string",3]]],[11,"get_id","","",2,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"default","","",2,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"route3","","",0,[[["vec",3],["string",3],["typeschema",3],["wirebuffer",3]],[["contracterror",3],["result",4],["wirebuffer",3]]]],[11,"route3","","",1,[[["vec",3],["string",3],["typeschema",3],["wirebuffer",3]],[["contracterror",3],["result",4],["wirebuffer",3]]]],[11,"get_fn_metadata","","",0,[[],[["vec",3],["transactionfn",3]]]],[11,"get_fn_metadata","","",1,[[],[["vec",3],["transactionfn",3]]]],[11,"name","","",0,[[],["string",3]]],[11,"name","","",1,[[],["string",3]]],[11,"to_state","","",2,[[],["state",3]]],[11,"get_key","","",2,[[],["string",3]]],[11,"build_from_state","","",2,[[["state",3]]]],[11,"serialize","","",2,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]]],"p":[[3,"AssetTransfer"],[3,"AssetTransferQuery"],[3,"Asset"]]},\
"basic_contract_rs":{"doc":"A basic Smart Contract","i":[[3,"AssetContract","basic_contract_rs","Structure for the AssetContract, on which implemenation…",null,null],[3,"MyAsset","","Basic definition of the asset object",null,null],[5,"__launch","","",null,[[]]],[5,"once_wapc","","",null,[[],["callresult",6]]],[5,"__guest_call","","",null,[[]]],[11,"new","","Some form of \'new\' function is required. See the lib.rs of…",0,[[],["assetcontract",3]]],[11,"asset_exists","","Does the Asset with the supplied key exist?",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"create_asset","","Creates a new asset, with supplied id, and value Marked as…",0,[[["string",3]],[["result",4],["contracterror",3]]]],[11,"read_asset_value","","Reads the value with the supplied asset id",0,[[["string",3]],[["contracterror",3],["result",4],["string",3]]]],[11,"new","","",1,[[["string",3]],["myasset",3]]],[11,"get_value","","",1,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",1,[[["state",3]]]],[11,"default","","",1,[[]]],[11,"route3","","",0,[[["vec",3],["string",3],["typeschema",3],["wirebuffer",3]],[["contracterror",3],["result",4],["wirebuffer",3]]]],[11,"get_fn_metadata","","",0,[[],[["vec",3],["transactionfn",3]]]],[11,"name","","Name of the contract",0,[[],["string",3]]],[11,"to_state","","",1,[[],["state",3]]],[11,"get_key","","",1,[[],["string",3]]],[11,"build_from_state","","",1,[[["state",3]]]]],"p":[[3,"AssetContract"],[3,"MyAsset"]]},\
"fabric_contract":{"doc":"This is the main crate for providing support for writing…","i":[[23,"contract_impl","fabric_contract","Use this macro to mark the implementation of the your…",null,null],[23,"transaction","","Use this to mark the functions that are considered to be…",null,null],[23,"property","","Define the properties of the datatype",null,null],[24,"DataTypeMacro","","Use this to mark the structs that serve as complex data…",null,null],[0,"prelude","","",null,null],[6,"CallResult","fabric_contract::prelude","",null,null],[5,"host_call","","The function through which all host calls take place.",null,[[],[["vec",3],["result",4],["error",3]]]],[14,"wapc_handler","","",null,null],[6,"Result","","WaPC Guest SDK result type",null,null],[3,"ContractDefn","","Internal definition of a contract",null,null],[3,"TransactionFn","","",null,null],[3,"TransactionFnBuilder","","",null,null],[5,"handle_wapc","","Map to the ContractService",null,[[],["callresult",6]]],[5,"host_log","","",null,[[]]],[0,"data","fabric_contract","Module to use to define the complex datatypes",null,null],[23,"Property","fabric_contract::data","Define the properties of the datatype",null,null],[3,"TypeSchema","","",null,null],[12,"contract_type","","",0,null],[12,"format","","",0,null],[3,"WireBuffer","","",null,null],[12,"buffer","","",1,null],[12,"schema","","",1,null],[8,"WireBufferFromReturnType","","",null,null],[10,"from_rt","","",2,[[]]],[8,"DataType","","",null,null],[10,"to_state","","Converts into a state that can be handled and put into the…",3,[[],["state",3]]],[10,"get_key","","",3,[[],["string",3]]],[10,"build_from_state","","",3,[[["state",3]]]],[0,"runtime","fabric_contract","Module to provide \'runtime\' services.",null,null],[5,"init_logger","fabric_contract::runtime","Called from the register contract macro.",null,[[]]],[5,"hook","","Hook function to capture the panic and route it to the…",null,[[["panicinfo",3]]]],[0,"contract","fabric_contract","Module to provide APIs to write contracts and interact…",null,null],[23,"Contract_Impl","fabric_contract::contract","Use this macro to mark the implementation of the your…",null,null],[23,"Transaction","","Use this to mark the functions that are considered to be…",null,null],[3,"Context","","",null,null],[3,"ContractManager","","Contract Manager structure that holds the list contract…",null,null],[3,"Collection","","",null,null],[3,"Ledger","","Ledger representing high level concept of the Fabric…",null,null],[3,"State","","A State is the combination of key and value that are…",null,null],[3,"StateQueryList","","",null,null],[3,"ContractError","","Contract Error is what the contract will return to…",null,null],[3,"LedgerError","","Ledger Error is returned by the API calls made against the…",null,null],[4,"CollectionName","","Collection Name",null,null],[13,"World","","",4,null],[13,"Private","","",4,null],[13,"Organization","","",4,null],[4,"KeyQueryHandler","","Key Queryhandler",null,null],[13,"Range","","Range(string,string) The start and end keys  ",5,null],[13,"RangeFrom","","RangeFrom(string)    From the given key to the end",5,null],[13,"RangeTo","","RangeTo(string)      From the start to the given key",5,null],[13,"RangeAll","","RangeAll(),  All composite keys. use with caution",5,null],[8,"Contract","","Trait that is implemented for each contract Default…",null,null],[10,"name","","",6,[[],["string",3]]],[8,"Metadata","","",null,null],[10,"get_fn_metadata","","Gets the detail of the functions, which is vector of strings",7,[[],[["vec",3],["transactionfn",3]]]],[8,"Routing","","",null,null],[10,"route3","","",8,[[["typeschema",3],["wirebuffer",3],["string",3],["vec",3]],[["contracterror",3],["wirebuffer",3],["result",4]]]],[0,"blockchain","fabric_contract","Module to provide APIs to get information about Fabric",null,null],[3,"ClientIdentity","fabric_contract::blockchain","Represents the identity that is requesting this transaction",null,null],[3,"Transaction","","Represents a transaction",null,null],[14,"register","fabric_contract","Macro to use in the lib.rs file of your contract\'s crate",null,null],[11,"from","fabric_contract::blockchain","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","fabric_contract::contract","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","fabric_contract::prelude","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","fabric_contract::contract","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","fabric_contract::prelude","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","fabric_contract::data","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","fabric_contract::contract","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from_rt","fabric_contract::data","",1,[[["string",3]]]],[11,"from_rt","","",1,[[]]],[11,"from_rt","","",1,[[]]],[11,"from_rt","","",1,[[]]],[11,"from_rt","","",1,[[]]],[11,"from_rt","","",1,[[]]],[11,"from_rt","","",1,[[]]],[11,"from_rt","","",1,[[]]],[11,"from_rt","","",1,[[]]],[11,"from_rt","","",1,[[]]],[11,"from_rt","","",1,[[]]],[11,"from_rt","","",1,[[]]],[11,"from_rt","","",1,[[]]],[11,"from_rt","","",1,[[]]],[11,"from_rt","","",1,[[]]],[11,"from","fabric_contract::contract","",16,[[["string",3]]]],[11,"from","","",16,[[]]],[11,"from","","",16,[[["ledgererror",3]]]],[11,"from","","",17,[[["string",3]]]],[11,"from","","",20,[[]]],[11,"from","","",20,[[]]],[11,"from","","",20,[[["state",3]]]],[11,"from","","",20,[[["state",3]]]],[11,"into_iter","","",21,[[]]],[11,"clone","","",11,[[],["context",3]]],[11,"clone","fabric_contract::prelude","",14,[[],["transactionfn",3]]],[11,"clone","","",15,[[],["transactionfnbuilder",3]]],[11,"clone","fabric_contract::data","",0,[[],["typeschema",3]]],[11,"default","fabric_contract::contract","",11,[[],["context",3]]],[11,"default","fabric_contract::prelude","",14,[[],["transactionfn",3]]],[11,"default","","",15,[[],["transactionfnbuilder",3]]],[11,"default","fabric_contract::data","",0,[[]]],[11,"default","fabric_contract::contract","",20,[[]]],[11,"fmt","fabric_contract::prelude","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","fabric_contract::data","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","fabric_contract::contract","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","fabric_contract::prelude","",14,[[["formatter",3]],["result",6]]],[11,"fmt","fabric_contract::data","",0,[[["formatter",3]],["result",6]]],[11,"fmt","fabric_contract::contract","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"from_iter","","",21,[[]]],[11,"source","","",16,[[],[["option",4],["error",8]]]],[11,"source","","",17,[[],[["option",4],["error",8]]]],[11,"get_id","fabric_contract::blockchain","The String id associated with this identiy",9,[[],["string",3]]],[11,"get_mspid","","The MSP Identifier of this identity",9,[[],["string",3]]],[11,"get_attribute","","Returns the value of the client\'s attribute named…",9,[[["string",3]],[["string",3],["option",4]]]],[11,"get_id","","Gets the transaction id",10,[[],["string",3]]],[11,"get_timestamp","","Gets the timestamp of this transaction",10,[[],["string",3]]],[11,"get_peer_mspid","","The MSP Identifier of the originating organization",10,[[],["string",3]]],[11,"get_submitting_identity","","Get",10,[[],[["clientidentity",3],["string",3],["result",4]]]],[11,"current_transaction","","Get the current transaction",10,[[],["transaction",3]]],[11,"new","fabric_contract::contract","",11,[[["transactioncontext",3]],["context",3]]],[11,"get_txid","","",11,[[],["string",3]]],[11,"get_channelid","","",11,[[],["string",3]]],[11,"new","fabric_contract::prelude","",12,[[["contract",8],["box",3]],["contractdefn",3]]],[11,"add_tx_fn","","",12,[[["transactionfn",3],["contractdefn",3]]]],[11,"add_new_method","","",12,[[["contractdefn",3]]]],[11,"get_txfn","","",12,[[["contractdefn",3]],[["result",4],["transactionfn",3],["string",3]]]],[11,"invoke","","",12,[[["string",3],["contractdefn",3],["context",3]],[["contracterror",3],["wirebuffer",3],["result",4]]]],[11,"new","fabric_contract::contract","",13,[[],["contractmanager",3]]],[11,"register_contract","","register the contract",13,[[["contract",8],["box",3]]]],[11,"route","","Route the call to the correct contract",13,[[["context",3],["string",3]],[["contracterror",3],["wirebuffer",3],["result",4]]]],[11,"new","fabric_contract::prelude","",14,[[],["transactionfn",3]]],[11,"get_name","","",14,[[],["string",3]]],[11,"get_return","","",14,[[],["typeschema",3]]],[11,"get_parameters","","",14,[[],[["vec",3],["parameterdefn",3]]]],[11,"new","","",15,[[],["transactionfnbuilder",3]]],[11,"name","","",15,[[]]],[11,"return_type","","",15,[[["typeschema",3]]]],[11,"add_arg","","",15,[[]]],[11,"build","","",15,[[],["transactionfn",3]]],[11,"new","fabric_contract::data","",1,[[["vec",3],["typeschema",3]]]],[11,"new_unfilled","","",1,[[["typeschema",3]]]],[11,"new","fabric_contract::contract","",18,[[["collectionname",4]]]],[11,"create","","",18,[[],[["ledgererror",3],["state",3],["result",4]]]],[11,"retrieve","","",18,[[["string",3]],[["result",4],["ledgererror",3]]]],[11,"update","","",18,[[],[["ledgererror",3],["state",3],["result",4]]]],[11,"state_exists","","Does this key exist",18,[[],[["ledgererror",3],["result",4]]]],[11,"retrieve_state","","Return the state for this key",18,[[["string",3]],[["ledgererror",3],["state",3],["result",4]]]],[11,"create_state","","Creates the state",18,[[["vec",3],["string",3]],[["ledgererror",3],["state",3],["result",4]]]],[11,"update_state","","Update the states",18,[[["vec",3],["string",3]],[["ledgererror",3],["state",3],["result",4]]]],[11,"delete_state","","Deletes the key",18,[[["string",3]],[["result",4],["ledgererror",3]]]],[11,"get_states","","Performs a key range query",18,[[["keyqueryhandler",4]],[["ledgererror",3],["result",4],["statequerylist",3]]]],[11,"query_states","","",18,[[["richqueryhandler",4]],[["result",4],["ledgererror",3]]]],[11,"access_ledger","","Get the Ledger based on the current transactional context",19,[[],["ledger",3]]],[11,"get_collection","","Return the collection based on the name",19,[[["collectionname",4]],["collection",3]]],[11,"make_composite_key","","Make a composite key.",20,[[["vec",3],["string",3]],["string",3]]],[11,"split_composite_key","","Splits a composite key",20,[[["string",3]],[["vec",3],["string",3]]]],[11,"new","","Creates a new state",20,[[["vec",3],["string",3]],["state",3]]],[11,"value","","Get the buffer that  this state",20,[[],["vec",3]]],[11,"key","","Get the key that used for this state",20,[[],["string",3]]],[11,"get_history","","Returns an iterator of the state history for this state",20,[[]]],[11,"get_hash","","gets the private hash for this stae",20,[[],["vec",3]]],[11,"set_endorsment","","Sets the State Based Endorsment for this state",20,[[]]],[11,"get_endorsement","","",20,[[]]],[11,"new","","",21,[[["vec",3],["state",3]]]]],"p":[[3,"TypeSchema"],[3,"WireBuffer"],[8,"WireBufferFromReturnType"],[8,"DataType"],[4,"CollectionName"],[4,"KeyQueryHandler"],[8,"Contract"],[8,"Metadata"],[8,"Routing"],[3,"ClientIdentity"],[3,"Transaction"],[3,"Context"],[3,"ContractDefn"],[3,"ContractManager"],[3,"TransactionFn"],[3,"TransactionFnBuilder"],[3,"ContractError"],[3,"LedgerError"],[3,"Collection"],[3,"Ledger"],[3,"State"],[3,"StateQueryList"]]},\
"fabric_contract_macros":{"doc":"Definitions of the macros used for the Contracts.","i":[[23,"contract_impl","fabric_contract_macros","Use this macro to mark the implementation of the your…",null,null],[23,"transaction","","Use this to mark the functions that are considered to be…",null,null],[23,"property","","Define the properties of the datatype",null,null],[24,"DataTypeMacro","","Use this to mark the structs that serve as complex data…",null,null]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);